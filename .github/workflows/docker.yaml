name: Docker
on: [workflow_dispatch]

jobs:
    docker-job:
        runs-on: ubuntu-latest
        container: #All options below are used in docker create command
            image: node:20.3-alpine3.17
            #For private image
           # credentials:
           #     username: ${{ secrets.DOCKER_USERNAME }}
            #    password: ${{ secrets.DOCKER_PASSWORD }}
            env:
                API_URL: some-url.com
            ports:
                - 80
            # volumes:
            #     - vol_name:/path/in/container
            #     - /path/to/container
            #     - /path/in/host:/path/in/container

           # options: --cpus 1 --All options of docker create comamnds are valid
               
        steps:
            - name: Log node and OS version
              run: |
                node -v
                cat /etc/os-release
            - name: Log ENV
              run: echo "API_URL is $API_URL"
            - name: Create a file for shared volume demo
              run: echo 'some-text' > shared-file.txt

            #Step-wise containers
            - name: Container for a step
              uses: docker://node:18.16-alpine3.17
              with:
                entrypoint: /usr/local/bin/node
                args: -p 2+3
            - name: Log node version
              uses: docker://node:18.16-alpine3.17
              with:
                args: -v
            - name: Display shared file in another container
              uses: docker://node:18.16-alpine3.17
              with:
                entrypoint: cat
                args: shared-file.txt

#Now lets use custom entrypoint script script.sh in our root folder
            # First checkout the repository to get script.sh
            - uses: actions/checkout@v3
            
            # Make script executable (required for custom entrypoint)
            - name: Make script executable
              run: chmod +x script.sh
              
            # Verify script exists and is executable
            - name: Verify script in current directory
              run: |
                pwd
                ls -la
                echo "Looking for script.sh:"
                if [ -f script.sh ]; then
                  ls -la script.sh
                  echo "Script content:"
                  cat script.sh
                else
                  echo "script.sh not found!"
                  echo "Available files:"
                  find . -name "*.sh" -type f
                fi
              
            # Try running the script directly first (without Docker)
            - name: Test script locally
              run: ./script.sh "test-arg1" "test-arg2"
              
            - name: Run custom entrypoint script in Docker
              uses: docker://node:18.16-alpine3.17
              with:
                entrypoint: /github/workspace/script.sh  # Use absolute path
                args: "some-arg1 some-arg2"



#Note:------------------------------------------------------------------------------------
#Working directory between different containers 
#share same volume mounts on host machine
#so any changes in workdir of any container is accessible by other containers
#Networks are also shared
#You can also sue custom entrypoint scripts 
#just give them execute permissions first